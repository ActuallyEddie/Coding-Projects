# import re to allow for pattern matching (Regular Expressions)
import re

# def valid_length to determine how long the password should be
def valid_length(password):
    return len(password) >= 8

# def uppercase to determine if the password has uppercase characters
# use r' to make the pattern more readable instead of using \\
def uppercase(password):
    return bool(re.search(r'[A-Z]', password))

# def lowercase to determine if the password has lowercase characters
def lowercase(password):
    return bool(re.search(r'[a-z]', password))

# def digits to determine if the password contains any digit characters
def digits(password):
    return bool(re.search(r'\d', password))

# def special_characters to determine if the password contains any special characters
# \W searches for any non-word characters and _ is included separately
def special_characters(password):
    return bool(re.search(r'[\W_]', password))

# These if statements are to have certain criteria for the password to meet
def password_strength(password):
    criteria_met = 0
    if valid_length(password):
        criteria_met += 1
    if uppercase(password):
        criteria_met += 1
    if lowercase(password):
        criteria_met += 1
    if digits(password):
        criteria_met += 1
    if special_characters(password):
        criteria_met += 1

# These if statements are to grade the user's password from weak to Very Strong
    if criteria_met == 5:
        return "Password is very strong"
    elif criteria_met == 4:
        return "Password is strong"
    elif criteria_met == 3:
        return "Password is moderate"
    elif criteria_met == 2:
        return "Password is weak"
    else:
        return "Password is very weak"

# Make an input for the user to input their password
password = input("Enter a password to check its strength: ")

# Make a variable for the strength of the password
strength = password_strength(password)
# Print out the strength of the password using f string
print(f" The password strength is: {strength}")
